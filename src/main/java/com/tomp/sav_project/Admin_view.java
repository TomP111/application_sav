/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.tomp.sav_project;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jackt
 */
public class Admin_view extends javax.swing.JFrame {
    
    private int IDD;

    /**
     * Creates new form Admin_view
     */
    public Admin_view(int ID) {
        initComponents();
        
        IDD = ID;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        viewList = new javax.swing.JButton();
        newTicketAdmin = new javax.swing.JButton();
        enCoursList = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(942, 492));
        setResizable(false);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID_Ticket", "Nom", "Prenom", "Type", "Etat", "Description", "Date", "Jeu", "Accès"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        viewList.setText("Liste des tickets");
        viewList.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        viewList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewListActionPerformed(evt);
            }
        });

        newTicketAdmin.setText("Nouveau ticket");
        newTicketAdmin.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        newTicketAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newTicketAdminActionPerformed(evt);
            }
        });

        enCoursList.setText("Tickets en cours");
        enCoursList.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        enCoursList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enCoursListActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(viewList, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newTicketAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(enCoursList, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 76, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 738, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(newTicketAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48)
                        .addComponent(viewList, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(enCoursList, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(48, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void viewListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewListActionPerformed
        String idticket = "";
        String idclient = "";
        String idjeu = "";
        String name = "";
        String prename = "";
        String type = "";
        String etat = "";
        String description = "";
        String date = "";
        String jeu = "";

        DefaultTableModel tblModel = (DefaultTableModel) jTable1.getModel();
        int rowNumber = tblModel.getRowCount();
        if (rowNumber > 0) {
            for (int i = tblModel.getRowCount() - 1; i >= 0; i--) {
                tblModel.removeRow(i);
            }

        }

        try {
            //étape 1: charger la classe de driver
            Class.forName("com.mysql.jdbc.Driver");
            //étape 2: créer l'objet de connexion
            Connection conn = DriverManager.getConnection(
                    "jdbc:mysql://localhost:3306/ppe?characterEncoding=utf8", "root", "");
            //étape 3: créer l'objet statement 
            Statement stmt = conn.createStatement();
            ResultSet res = stmt.executeQuery("SELECT * FROM tickets");
            res.last();
            int nombreLignes = res.getRow();
            res.beforeFirst();
            if (nombreLignes == 0) {
                conn.close();
                JOptionPane.showMessageDialog(this, "Aucun ticket");
                return;
            }
            while (res.next()) {
                idclient = String.valueOf(res.getInt("ID"));
                idticket = String.valueOf(res.getInt("ID_Ticket"));
                etat = res.getString("Etat");
                type = res.getString("Type");
                idjeu = String.valueOf(res.getInt("ID_JEU"));
                description = res.getString("Description");
                date = res.getString("Date");

                Statement stmt2 = conn.createStatement();
                ResultSet res2 = stmt2.executeQuery("SELECT * FROM accounts WHERE ID = " + idclient);
                while (res2.next()) {
                    name = res2.getString("Nom");
                    prename = res2.getString("Prenom");
                }

                if (!idjeu.isBlank()) {
                    Statement stmt3 = conn.createStatement();
                    ResultSet res3 = stmt3.executeQuery("SELECT * FROM articles WHERE ID_JEU = " + idjeu);

                    while (res3.next()) {
                        jeu = res3.getString("Nom");
                    }
                }

                String tbData[] = {idticket, name, prename, type, etat, description, date, jeu};

                tblModel.addRow(tbData);

            }
            //étape 5: fermez l'objet de connexion
            conn.close();
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_viewListActionPerformed

    
    
    private void newTicketAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newTicketAdminActionPerformed
        new AdminTicket(IDD).setVisible(true);
    }//GEN-LAST:event_newTicketAdminActionPerformed

    private void enCoursListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enCoursListActionPerformed
        String idticket = "";
        String idclient = "";
        String idjeu = "";
        String name = "";
        String prename = "";
        String type = "";
        String etat = "";
        String description = "";
        String date = "";
        String jeu = "";

        DefaultTableModel tblModel = (DefaultTableModel) jTable1.getModel();
        int rowNumber = tblModel.getRowCount();
        if (rowNumber > 0) {
            for (int i = tblModel.getRowCount() - 1; i >= 0; i--) {
                tblModel.removeRow(i);
            }
        }

        try {
            //étape 1: charger la classe de driver
            Class.forName("com.mysql.jdbc.Driver");
            //étape 2: créer l'objet de connexion
            Connection conn = DriverManager.getConnection(
                    "jdbc:mysql://localhost:3306/ppe?characterEncoding=utf8", "root", "");
            //étape 3: créer l'objet statement 
            Statement stmt = conn.createStatement();
            ResultSet res = stmt.executeQuery("SELECT * FROM tickets WHERE Etat='En cours'");
            res.last();
            int nombreLignes = res.getRow();
            res.beforeFirst();
            if (nombreLignes == 0) {
                conn.close();
                JOptionPane.showMessageDialog(this, "Aucun ticket");
                return;
            }
            while (res.next()) {
                idclient = String.valueOf(res.getInt("ID"));
                idticket = String.valueOf(res.getInt("ID_Ticket"));
                etat = res.getString("Etat");
                type = res.getString("Type");
                idjeu = String.valueOf(res.getInt("ID_JEU"));
                description = res.getString("Description");
                date = res.getString("Date");

                Statement stmt2 = conn.createStatement();
                ResultSet res2 = stmt2.executeQuery("SELECT * FROM accounts WHERE ID = " + idclient);
                while (res2.next()) {
                    name = res2.getString("Nom");
                    prename = res2.getString("Prenom");
                }

                if (!idjeu.isBlank()) {
                    Statement stmt3 = conn.createStatement();
                    ResultSet res3 = stmt3.executeQuery("SELECT * FROM articles WHERE ID_JEU = " + idjeu);

                    while (res3.next()) {
                        jeu = res3.getString("Nom");
                    }
                }

                String tbData[] = {idticket, name, prename, type, etat, description, date, jeu};

                tblModel.addRow(tbData);

            }
            //étape 5: fermez l'objet de connexion
            conn.close();
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_enCoursListActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Admin_view.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Admin_view.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Admin_view.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Admin_view.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton enCoursList;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton newTicketAdmin;
    private javax.swing.JButton viewList;
    // End of variables declaration//GEN-END:variables
}
